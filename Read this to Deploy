# 📦 Cluster Specification

```text
| Server        | CPU   | RAM  | Function | IP             | OS                  |
|---------------|-------|------|----------|----------------|---------------------|
| kube-master   | 2 CPU | 2GB  | Open5GS  | 192.168.1.5     | Ubuntu Server 24.04 |
| kube-worker-1 | 2 CPU | 2GB  | EURANSIM | 192.168.1.6     | Ubuntu Server 24.04 |
```

---

# 🔗 Reference

- https://luislogs.com/posts/security-and-observability-with-cilium-on-my-5g-network/

---

# ⚙️ Pre-requisites

### 1. Kubernetes & Helm Installation

> *Install sesuai kebutuhan masing-masing.*

### 2. Install Cilium CLI

```bash
CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)
CLI_ARCH=amd64
if [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi

curl -L --fail --remote-name-all \
  https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}

sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum

sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
```

### 3. Install Cilium with Helm

```bash
helm repo add cilium https://helm.cilium.io/
helm repo update

helm install cilium cilium/cilium --namespace kube-system
```

Cek inisialisasi selesai dengan:

```bash
kubectl get daemonset -n kube-system
```

---

### 4. Tambah Helm Repo untuk Kube Prometheus Stack

```bash
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update
```

---

### 5. Buat `values.yml`

```yaml
grafana:
  enabled: true

prometheus:
  enabled: true
  prometheusSpec:
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: prometheus-server
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi
    additionalScrapeConfigsSecret:
      enabled: true
      name: cilium-hubble-scrape-config
      key: prometheus.yml

    securityContext:
      fsGroup: 1000
      runAsUser: 65534
      runAsNonRoot: true

alertmanager:
  enabled: true

# Other components (optional):
# prometheus-node-exporter:
#   enabled: true
# kube-state-metrics:
#   enabled: true
```
